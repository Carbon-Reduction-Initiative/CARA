policy_module(cari, 1.100.1)

########################################
#
# Declarations
#

type cari_t;
type cari_exec_t;
init_daemon_domain(cari_t, cari_exec_t)

permissive cari_t;

type cari_initrc_exec_t;
init_script_file(cari_initrc_exec_t)

type cari_conf_t;
files_type(cari_conf_t)

type cari_var_lib_t;
files_type(cari_var_lib_t)

type cari_var_run_t;
files_type(cari_var_run_t)

type cari_port_t;
corenet_port(cari_port_t)

########################################
#
# cari local policy
#
allow cari_t self:process { fork };

allow cari_t self:fifo_file rw_fifo_file_perms;
allow cari_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(cari_t, cari_conf_t, cari_conf_t)
manage_files_pattern(cari_t, cari_conf_t, cari_conf_t)

manage_dirs_pattern(cari_t, cari_var_lib_t, cari_var_lib_t)
manage_files_pattern(cari_t, cari_var_lib_t, cari_var_lib_t)
files_var_lib_filetrans(cari_t, cari_var_lib_t, { dir file })

manage_dirs_pattern(cari_t, cari_var_run_t, cari_var_run_t)
manage_files_pattern(cari_t, cari_var_run_t, cari_var_run_t)

sysnet_dns_name_resolve(cari_t)
corenet_all_recvfrom_unlabeled(cari_t)

allow cari_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(cari_t)
corenet_tcp_sendrecv_generic_node(cari_t)
corenet_tcp_sendrecv_all_ports(cari_t)
corenet_tcp_bind_generic_node(cari_t)

gen_require(`
    type cari_port_t;
')
allow cari_t cari_port_t:tcp_socket name_bind;

gen_require(`
    type cari_port_t;
')
allow cari_t cari_port_t:tcp_socket name_connect;

domain_use_interactive_fds(cari_t)

files_read_etc_files(cari_t)

miscfiles_read_localization(cari_t)

sysnet_dns_name_resolve(cari_t)

allow cari_t cari_exec_t:file execute_no_trans;
allow cari_t self:process setsched;
corecmd_exec_ls(cari_t)
corenet_tcp_connect_http_port(cari_t)
dev_read_urand(cari_t)
fs_getattr_xattr_fs(cari_t)
kernel_read_system_state(cari_t)
